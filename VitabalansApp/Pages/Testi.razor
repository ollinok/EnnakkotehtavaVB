@page "/Testisivu"
@using DataAccess.Models.HelperModels
@inject IArticlesData articlesData

<h3>Testisivu</h3>

<div>
    <input
        type="text"
        placeholder="Hae..."
        aria-label="Hakukenttä"
        @oninput="((i) => SearchHandler((string)i.Value!))"
    />
    @if (namesOnly is not null && namesOnly.Count() > 1)
    {
        <div class="position-absolute">
            <ul>
                @foreach (var name in namesOnly)
                {
                    <li>@name</li>     
                }
            </ul>
        </div>
    }
</div>
<div>
    sdasdasdasd
</div>


@code {
    private string searchText = "";
    private IEnumerable<ArticlesModel>? articles;

    private IEnumerable<string>? namesOnly;

    private async Task SearchHandler(string text)
    {
        searchText = text;
        await FilterArticles();
    }

    private async Task FilterArticles()
    {
        var filtered = await articlesData.GetAllArticleNames();
        HashSet<string>? nameOnly = new HashSet<string>();

        if (!string.IsNullOrWhiteSpace(searchText))
        {
            filtered = filtered.Where(a => a.Name!.StartsWith(searchText, StringComparison.CurrentCultureIgnoreCase));
        }

        articles = filtered;

        foreach (var item in filtered)
        {
            nameOnly.Add(item.Name.Split(' ')[0]);
        }
        namesOnly = nameOnly.Take(10);
    }
}
