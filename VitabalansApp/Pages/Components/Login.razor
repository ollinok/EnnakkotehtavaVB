@inject IUsersData usersData
@inject ILocalStorageService localStorage
@inject AuthenticationStateProvider authStateProvider
@using VitabalansApp.Authentication



<div class="d-flex flex-column align-items-center py-3">
    <h3>Kirjaudu sisään</h3>
    <div class="col-11 col-lg-6 col-xl-3 border border-1 px-4 py-3">
        <EditForm Model="loginInfo" OnValidSubmit="LoginUser">
            <DataAnnotationsValidator />
            @*<ValidationMessage For="() => loginInfo.Email" />*@
            <div class="py-2">
                <label for="email" class="form-label">Sähköposti:</label>
                 <InputText class="form-control" id="email" type="email" title="Sähköposti" @bind-Value="loginInfo.Email" placeholder="Email"/>
            </div>
            @*<ValidationMessage For="() => loginInfo.Password" />*@
            <div class="py-2">
                <label for="password" class="form-label">Salasana:</label>
                 <InputText class="form-control" id="password" type="password" title="Salasana" @bind-Value="loginInfo.Password" placeholder="Salasana" />
            </div>
            <div class="d-flex justify-content-end">
                <button type="submit" class="btn btn-success">Kirjaudu</button>
            </div>
        </EditForm>
    </div>
</div>



<div>
    @message
</div>

@code {
    LoginModel loginInfo = new LoginModel();
    string message = "";

    private async Task LoginUser()
    {
        UsersModel userInfo = await usersData.AuthenticateUser(loginInfo);

        if (userInfo is not null)
        {
            await localStorage.SetItemAsync("jwt", $"{JwtData.CreateJWTToken(userInfo)}");
            var token = await localStorage.GetItemAsStringAsync("jwt");
            await authStateProvider.GetAuthenticationStateAsync();
            message = "success";
        }
        else
        {
            message = "fail";
        }
    }
}
