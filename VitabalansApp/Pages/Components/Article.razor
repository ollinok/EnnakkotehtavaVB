<div class="container border border-2 pt-3 px-3 bg-light">
    <div class="d-flex justify-content-between">
        <h2>@chosenArticle!.First().Name</h2>
        <button type="button" class="btn-close" @onclick="CloseArticle" aria-label="Sulje"></button>
    </div>
    <div class="fs-7">
        EAN: @chosenArticle!.First().Ean
    </div>
    <div class="d-flex flex-column flex-md-row justify-content-between">
        <div>
            <img src="/images/pilleri.png" class="border border-1" alt="lääke" width="200" height="200"/>
        </div>
        <div class="fst-italic align-self-md-end align">
            Päivitetty: @(chosenArticle!.First().UpdatedAt != DateTime.MinValue ? chosenArticle!.First().UpdatedAt.ToString("d") : chosenArticle!.First().CreatedAt.ToString("d"))
        </div>
    </div>
    <hr />
    <div>
        <h3>Hinnasto</h3>
        <table class="table table-hover table-bordered">
            <thead>
                <tr>
                    <th scope="col">Luokka</th>
                    <th scope="col" class="text-end">Hinta</th>
                    <th scope="col" class="text-end">Päiväys</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var row in chosenArticle!)
                {
                    <tr>
                        <th class="col-4" scope="row">@row.PriceGroup?.Name</th>
                        <td class="col-4 text-end">@(row.Price?.Price is not null ? $"{row.Price.Price} €" : "-")</td>
                        <td class="col-4 text-end">@(row.Price?.UpdatedAt != DateTime.MinValue ? row.Price?.UpdatedAt.ToString("d") : row.Price?.CreatedAt.ToString("d"))</td>
                    </tr>    
                }        
            </tbody>
        </table>  
    </div>
</div>


@code {
    [CascadingParameter(Name = "ChosenArticle")]
    private IEnumerable<FullArticlesModel>? chosenArticle { get; set; }

    [Parameter]
    public EventCallback CloseComponent { get; set; }

    private void CloseArticle()
    {
        CloseComponent.InvokeAsync();
    }
}
