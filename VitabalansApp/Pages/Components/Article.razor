@if (chosenArticle is not null)
{
    <div class="container border border-2 pt-3 px-3 bg-light">
        <div class="d-flex justify-content-between">
            <h2 class="mb-0">@chosenArticle.First().Name</h2>
            <button type="button" class="btn-close" @onclick="CloseArticle" aria-label="Sulje"></button>
        </div>
        <div class="fs-7">
            EAN: @chosenArticle.First().Ean
        </div>
        <div class="d-flex flex-column flex-md-row justify-content-between">
            <div>
                <img src="/images/pilleri.png" class="border border-1" alt="lääke" width="200" height="200"/>
            </div>
            <div class="align-self-md-end">
                <div class="d-flex justify-content-center my-3">
                    <button class="btn btn-warning" type="button" @onclick="ManagePrices">Muokkaa hintoja</button>
                </div>
                <div class="d-flex justify-content-end fst-italic">
                    Päivitetty: @(chosenArticle.First().UpdatedAt != DateTime.MinValue ? chosenArticle.First().UpdatedAt.ToString("d") : chosenArticle.First().CreatedAt.ToString("d"))
                </div>    
            </div>
        </div>
        <hr />
        <div>
            <h3 class="mb-0">Hinnasto</h3>
            <table class="table table-hover table-bordered">
                <thead>
                    <tr>
                        <th scope="col">Luokka</th>
                        <th scope="col" class="text-end">Hinta</th>
                        <th scope="col" class="text-end">Päiväys</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var row in chosenArticle)
                    {
                        <tr>
                            <th class="col-4" scope="row">@row.PriceGroup?.Name</th>
                            <td class="col-4 text-end">@(row.Price?.Price is not null ? $"{row.Price.Price} €" : "-")</td>
                            <td class="col-4 text-end">@(row.Price?.UpdatedAt != DateTime.MinValue ? row.Price?.UpdatedAt.ToString("d") : row.Price?.CreatedAt.ToString("d"))</td>
                        </tr>    
                    }        
                </tbody>
            </table>  
        </div>
    </div>
}
@if (articleInfo is not null)
{
    <CascadingValue Value="articleInfo" Name="Article">
        <ManagePricesForm CloseEdit="ClosePriceEdit"/>
    </CascadingValue>
}

@code {
    [CascadingParameter(Name = "ChosenArticle")]
    private IEnumerable<FullArticlesModel>? chosenArticle { get; set; }

    [Parameter]
    public EventCallback CloseComponent { get; set; }

    ArticlesModel? articleInfo;

    private void ManagePrices()
    {
        articleInfo = new ArticlesModel()
        { 
            Id = chosenArticle!.First().Id,
            Name = chosenArticle!.First().Name,
            Ean = chosenArticle!.First().Ean,
            CreatedAt = chosenArticle!.First().CreatedAt,
            UpdatedAt = chosenArticle!.First().UpdatedAt
        };
    }

    private void ClosePriceEdit() => articleInfo = null;
    private void CloseArticle() => CloseComponent.InvokeAsync();
}
