@inject IPriceGroupsData priceGData
@inject IPricesData pricesData

<div class="container col-xxl-6 col-lg-8 col-sm-12 position-absolute top-50 start-50 translate-middle border border-3 border-dark rounded bg-light">
    <div class="d-flex flex-column py-3 px-1">
        <div class="d-flex justify-content-end">
            <button type="button" class="btn-close" @onclick="CloseForm" aria-label="Sulje"></button>
        </div>
        <div>
            <h3 class="text-center">Muokkaa hintoja</h3>
        </div>
        <div class="d-flex flex-wrap justify-content-between col-sm-10 col-12 align-self-center px-3 border border-1 border-secondary bg-gradient">
            @foreach (var p in prices)
            {
                <EditForm class="row col-6 py-2" Model="p" OnValidSubmit="(() => SendPrice(p.PriceGroupId))">

                    <label for="@($"group{p.PriceGroupId}")" class="col-form-label col-5 fs-7">@($"{p.PriceGroup.Name}:")</label>

                    <div class="col-7">
                        <InputNumber TValue="decimal?" class="form-control" id="@($"group{p.PriceGroupId}")" @bind-Value="p.Price" />
                    </div>
                </EditForm>
            }

           @* <EditForm Model="article" OnValidSubmit="OpenPricesForm">
                <div class="py-2">
                    <label for="nimi" class="form-label">Tuotteen nimi:</label>
                    <InputText class="form-control" id="nimi" placeholder="Nimi" @bind-Value="article.Title" title="Tuotteen nimi" />
                </div>
                <div class="py-2">
                    <label for="mg" class="form-label">Annoksen suuruus:</label>
                    <InputNumber class="form-control" id="mg" @bind-Value="article.Mg" title="Annoksen suuruus milligrammoissa"/>
                </div>
                <div class="py-2">
                    <label for="amount" class="form-label">Pakkauksen tuotemäärä:</label>
                    <InputNumber class="form-control" id="amount" @bind-Value="article.Amount" title="Pakkauksen sisältämä tuotteen kappalemäärä"/>
                </div>
                <div class="py-2">
                    <label for="ean" class="form-label">EAN-13-viivakoodi:</label>
                    <InputText class="form-control" id="ean" placeholder="EAN-koodi" @bind-Value="article.Ean" title="EAN-13-standardin mukainen koodi"/>
                </div>
                <DataAnnotationsValidator />
                <div class="d-flex justify-content-md-end gap-md-4 justify-content-between py-2">
                    <button type="button" class="btn btn-danger" @onclick="CloseForm">Peruuta</button>
                    <button type="submit" class="btn btn-success">Luo</button>
                </div>
                <ValidationMessage For="() => article.Title" />
            </EditForm>*@
        </div>
    </div> 
</div>
@code {
    List<FullPricesModel>? prices;
    //PricesModel price = new PricesModel();
    IEnumerable<PriceGroupsModel>? priceGroups;

    [CascadingParameter(Name = "ArticleId")]
    private string? articleId { get; set; }

    protected async override Task OnInitializedAsync()
    {
        int aId = int.Parse(articleId!);
        priceGroups = await priceGData.GetAllPriceGroups();
        prices = (await pricesData.GetAllPricesByArticleId(aId)).ToList();

        if (prices.Count() == 0)
        {
            foreach (var pg in priceGroups)
            {
                prices.Add(new FullPricesModel() { PriceGroupId = pg.Id, ArticleId = aId, PriceGroup = pg });

            }
        }
        //price.ArticleId = int.Parse(articleId!);
    }

    private async void SendPrice(int priceGroupId)
    {
        //price.PriceGroupId = priceGroupId;

    }



    private void CloseForm()
    {
        
    }
}
