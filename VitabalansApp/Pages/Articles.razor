@page "/Articles"
@inject IArticlesData articlesData
@using DataAccess.Models.HelperModels
@using VitabalansApp.Pages.Components;

<h1>Myyntiartikkelit</h1>

<input
    type="text"
    placeholder="Hae..."
    aria-label="Hakukenttä"
    @oninput="((i) => SearchHandler((string)i.Value!))"
    />
<div>
    @if (articles is not null && articles.Count() < 10)
    {
        foreach(var article in articles)
        {
            <div>
                <div @onclick="(() => OpenArticleInfo(article))">Name: @article.Name</div>
            </div>
        }
    }
</div>
<div>
    @if (chosenArticle is not null)
    {
        <CascadingValue Value="chosenArticle" Name="ChosenArticle">
            <Article CloseComponent="@CloseArticleInfo"/>
        </CascadingValue>
    }
</div>


@code {
    private string searchText = "";
    private IEnumerable<FullArticlesModel>? chosenArticle;
    private IEnumerable<ArticlesModel>? articles;

    //protected async override Task OnInitializedAsync()
    //{

    //}

    private async Task FilterArticles()
    {
        var filtered = await articlesData.GetArticleNames();

        if (!string.IsNullOrWhiteSpace(searchText))
        {
            filtered = filtered.Where(a => a.Name!.StartsWith(searchText, StringComparison.CurrentCultureIgnoreCase));
        }

        articles = filtered;
    }

    private async Task SearchHandler(string text)
    {
        searchText = text;
        await FilterArticles();
    }

    private async Task OpenArticleInfo(ArticlesModel article)
    {
        chosenArticle = await articlesData.GetFullArticleInfo(article.Id);
    }

    private void CloseArticleInfo() => chosenArticle = null;

}