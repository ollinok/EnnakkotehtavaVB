@page "/Articles"
@inject IArticlesData articlesData
@using VitabalansApp.Pages.Components;

<div class="container-fluid">
    <div class="row gx-lg-4">
        <div class="col-lg-6 mb-2">
            <h1>Myyntiartikkelit</h1>
            <div class="mb-2">
                <input
                    type="text"
                    placeholder="Hae..."
                    aria-label="Hakukenttä"
                    @oninput="((i) => SearchHandler((string)i.Value!))"
                />
                @if (namesOnly is not null && namesOnly.Count() > 1 && searchText != "")
                {
                    <div class="position-absolute">
                        <ul>
                            @foreach (var name in namesOnly)
                            {
                                <li @onclick="() => SearchHandler(name)">@name</li>
                            }
                        </ul>
                    </div>
                }
            </div> 
                @if (articles is not null && articles.Count() <= 10)
                {
                    <div class="card">
                        <ul class="list-group list-group-flush">
                            @foreach(var article in articles)
                            {
                                <li class="fw-bold list-group-item p-0 border border-2" @onclick="(() => OpenArticleInfo(article))">
                                    <a href="Articles/@GetHref()" class="text-decoration-none text-black d-block p-3 vb-hover-item">@article.Name</a>
                                </li>
                            }
                        </ul>
                    </div>
                }
        </div>

        <div class="col-lg-6" id="article-info">
            @if (chosenArticle is not null)
            {
                <CascadingValue Value="chosenArticle" Name="ChosenArticle">
                    <Article CloseComponent="@CloseArticleInfo"/>
                </CascadingValue>
            }
        </div>
        <AnchorNavigation />
    </div>
</div>


@code {
    string GetEleId() => "article-info";
    string GetHref() => "#" + GetEleId();

    private string searchText = "";
    private IEnumerable<FullArticlesModel>? chosenArticle;
    private IEnumerable<ArticlesModel>? articles;
    private IEnumerable<string>? namesOnly;

    //protected async override Task OnInitializedAsync()
    //{

    //}

    private async Task FilterArticles()
    {
        var filtered = await articlesData.GetAllArticleNames();
        HashSet<string>? nameOnly = new HashSet<string>();

        if (!string.IsNullOrWhiteSpace(searchText))
        {
            filtered = filtered.Where(a => a.Name!.StartsWith(searchText, StringComparison.CurrentCultureIgnoreCase));
        }

        articles = filtered;
        foreach (var item in filtered)
        {
            nameOnly.Add(item.Name!.Split(' ')[0]);
        }
        namesOnly = nameOnly.Take(10);
    }

    private async Task SearchHandler(string text)
    {
        searchText = text;
        await FilterArticles();
    }

    private async Task OpenArticleInfo(ArticlesModel article)
    {
        chosenArticle = await articlesData.GetFullArticleInfo(article.Id);
    }

    private void CloseArticleInfo() => chosenArticle = null;

}